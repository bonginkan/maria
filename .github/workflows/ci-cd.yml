name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'NPM tag (alpha, beta, latest)'
        required: true
        default: 'alpha'
        type: choice
        options:
          - alpha
          - beta
          - latest

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🗃️ Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🔗 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🔧 Build project
        run: pnpm run build

      - name: 🧪 Run linting
        run: pnpm run lint

      - name: 🔍 Type checking
        run: pnpm run typecheck

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            bin/
          retention-days: 7

  # Auto NPM Publish on main branch
  auto-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      packages: write

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 📊 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: 📝 Auto-increment version
        run: |
          # Get current version and increment patch
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Auto-increment alpha version
          pnpm version prerelease --preid=alpha --no-git-tag-version
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: 🔧 Build project
        run: pnpm run build

      - name: 🚀 Publish to NPM
        run: npm publish --access public --tag alpha
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🎉 Success notification
        run: |
          echo "🎉 Successfully published @bonginkan/maria@${{ env.NEW_VERSION }}"
          echo "📦 Install with: npm install -g @bonginkan/maria@alpha"

  # Manual NPM Publish
  manual-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 📊 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: 🔧 Build project
        run: pnpm run build

      - name: 🚀 Publish to NPM
        run: npm publish --access public --tag ${{ github.event.inputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ✅ Success notification
        run: |
          echo "🎉 Successfully published @bonginkan/maria@${{ github.event.inputs.tag }}"
          echo "📦 Install with: npm install -g @bonginkan/maria@${{ github.event.inputs.tag }}"