name: Lint and Quality Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - develop
      - 'feature/**'

jobs:
  lint-and-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4
        
      - name: üèóÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: üì¶ Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10'
          
      - name: üì• Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: üß™ ESLint Check
        id: eslint
        run: |
          echo "## üß™ ESLint Report" >> $GITHUB_STEP_SUMMARY
          pnpm run lint 2>&1 | tee lint-output.txt || true
          
          ERROR_COUNT=$(grep -c "error" lint-output.txt || echo "0")
          WARNING_COUNT=$(grep -c "warning" lint-output.txt || echo "0")
          
          echo "- Errors: **$ERROR_COUNT**" >> $GITHUB_STEP_SUMMARY
          echo "- Warnings: **$WARNING_COUNT**" >> $GITHUB_STEP_SUMMARY
          
          if [ "$ERROR_COUNT" -gt "0" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ‚ùå Lint Errors Found" >> $GITHUB_STEP_SUMMARY
            echo "Please fix the following errors:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep "error" lint-output.txt | head -20 >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "::set-output name=errors::$ERROR_COUNT"
          echo "::set-output name=warnings::$WARNING_COUNT"
          
      - name: üîç TypeScript Check
        id: typecheck
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üîç TypeScript Check" >> $GITHUB_STEP_SUMMARY
          
          if pnpm run typecheck 2>&1 | tee typecheck-output.txt; then
            echo "‚úÖ Type checking passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Type checking has issues" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            tail -20 typecheck-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: üìä Code Quality Summary
        if: always()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üìä Code Quality Summary" >> $GITHUB_STEP_SUMMARY
          
          ERRORS="${{ steps.eslint.outputs.errors }}"
          WARNINGS="${{ steps.eslint.outputs.warnings }}"
          
          if [ "$ERRORS" = "0" ]; then
            echo "### ‚úÖ All quality checks passed!" >> $GITHUB_STEP_SUMMARY
          elif [ "$ERRORS" -le "100" ]; then
            echo "### ‚ö†Ô∏è Acceptable error count ($ERRORS/100 max)" >> $GITHUB_STEP_SUMMARY
            echo "Please continue to reduce errors in future commits." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚ùå Too many errors ($ERRORS)" >> $GITHUB_STEP_SUMMARY
            echo "Maximum allowed: 100. Please fix before merging." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
      - name: üí¨ Comment on PR
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ‚ùå Code Quality Check Failed\n\nPlease fix lint errors before merging. Run `pnpm lint` locally to see all issues.'
            })