{"version":3,"sources":["../../src/commands/natural-chat.ts"],"sourcesContent":["import { Command } from 'commander';\nimport prompts from 'prompts';\nimport chalk from 'chalk';\nimport ora from 'ora';\n\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n\ninterface ChatSession {\n  messages: ChatMessage[];\n  sessionId: string;\n  startTime: Date;\n}\n\nexport default function naturalChatCommand(program: Command) {\n  program\n    .command('chat')\n    .description('自然言語での対話型チャットセッション')\n    .option('-m, --mode <mode>', '動作モード (chat/research/creative)', 'chat')\n    .option('-v, --verbose', '詳細出力を表示', false)\n    .action(async (options) => {\n      console.log(chalk.cyan.bold('🤖 MARIA CODE Chat Interface'));\n      console.log(chalk.gray(`Mode: ${options.mode} | Verbose: ${options.verbose}`));\n      console.log(chalk.yellow('Type your request in natural language. Type \"exit\" to quit.\\n'));\n\n      const session: ChatSession = {\n        messages: [],\n        sessionId: generateSessionId(),\n        startTime: new Date()\n      };\n\n      // チャットループ\n      while (true) {\n        try {\n          const response = await prompts({\n            type: 'text',\n            name: 'message',\n            message: chalk.blue('You:'),\n            validate: (value) => value.length > 0 ? true : 'Please enter a message'\n          });\n\n          if (!response.message) {\n            console.log(chalk.yellow('👋 Chat session ended.'));\n            break;\n          }\n\n          const userMessage = response.message.trim();\n          \n          // 終了コマンド\n          if (userMessage.toLowerCase() === 'exit' || userMessage.toLowerCase() === 'quit') {\n            console.log(chalk.yellow('👋 Chat session ended.'));\n            break;\n          }\n\n          // ヘルプコマンド\n          if (userMessage.toLowerCase() === 'help') {\n            showHelp();\n            continue;\n          }\n\n          // 履歴コマンド\n          if (userMessage.toLowerCase() === 'history') {\n            showHistory(session);\n            continue;\n          }\n\n          // クリアコマンド\n          if (userMessage.toLowerCase() === 'clear') {\n            console.clear();\n            console.log(chalk.cyan.bold('🤖 MARIA CODE Chat Interface'));\n            console.log(chalk.gray('Chat history cleared.\\n'));\n            session.messages = [];\n            continue;\n          }\n\n          // ユーザーメッセージを記録\n          session.messages.push({\n            role: 'user',\n            content: userMessage,\n            timestamp: new Date()\n          });\n\n          // AI応答をシミュレート\n          const aiResponse = await processUserMessage(userMessage);\n          \n          // AI応答を記録\n          session.messages.push({\n            role: 'assistant',\n            content: aiResponse,\n            timestamp: new Date()\n          });\n\n          console.log(chalk.green('🤖 MARIA:'), aiResponse);\n          console.log(''); // 空行\n\n        } catch (error) {\n          if (error instanceof Error && error.message.includes('cancelled')) {\n            console.log(chalk.yellow('\\n👋 Chat session cancelled.'));\n            break;\n          }\n          console.error(chalk.red('Error:'), error);\n        }\n      }\n\n      // セッション終了時の統計\n      showSessionStats(session);\n    });\n}\n\nasync function processUserMessage(\n  message: string\n): Promise<string> {\n  const spinner = ora('🤔 MARIA is thinking...').start();\n  \n  try {\n    // シミュレーション待機\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n    \n    spinner.stop();\n\n    // 自然言語処理のシミュレーション\n    const response = await generateResponse(message);\n    return response;\n    \n  } catch (error) {\n    spinner.stop();\n    return `申し訳ありません。エラーが発生しました: ${error instanceof Error ? error.message : 'Unknown error'}`;\n  }\n}\n\nasync function generateResponse(\n  message: string\n): Promise<string> {\n  const lowerMessage = message.toLowerCase();\n  \n  // パターンマッチングによる応答生成\n  if (lowerMessage.includes('create') || lowerMessage.includes('作成') || lowerMessage.includes('作って')) {\n    if (lowerMessage.includes('file') || lowerMessage.includes('ファイル')) {\n      return `ファイル作成のご依頼ですね。以下の手順で進めます：\\n\\n1. ファイル名と形式を確認\\n2. 必要な内容を整理\\n3. ファイル作成と保存\\n\\n具体的なファイル名と内容を教えてください。`;\n    }\n    if (lowerMessage.includes('function') || lowerMessage.includes('関数')) {\n      return `関数作成のリクエストを承りました。\\n\\n必要な情報：\\n• 関数名\\n• 引数の型と名前\\n• 戻り値の型\\n• 処理内容\\n\\nこれらの詳細を教えてください。TypeScript/JavaScriptで実装します。`;\n    }\n    if (lowerMessage.includes('component') || lowerMessage.includes('コンポーネント')) {\n      return `Reactコンポーネントの作成ですね！\\n\\n以下を教えてください：\\n• コンポーネント名\\n• 必要なプロパティ\\n• 見た目や機能の要件\\n• スタイリング方法（Tailwind CSS使用可能）`;\n    }\n  }\n\n  if (lowerMessage.includes('fix') || lowerMessage.includes('修正') || lowerMessage.includes('直して')) {\n    return `問題の修正をお手伝いします。\\n\\n詳細情報をお聞かせください：\\n• どのような問題が発生していますか？\\n• エラーメッセージはありますか？\\n• 問題が起きているファイルやコードはありますか？\\n\\n情報をいただければ、適切な解決策を提案します。`;\n  }\n\n  if (lowerMessage.includes('explain') || lowerMessage.includes('説明') || lowerMessage.includes('教えて')) {\n    return `説明のご依頼ですね。以下のような内容について詳しく説明できます：\\n\\n• コードの動作原理\\n• ライブラリやフレームワークの使い方\\n• ベストプラクティス\\n• アーキテクチャの設計\\n\\n具体的に何について知りたいか教えてください。`;\n  }\n\n  if (lowerMessage.includes('test') || lowerMessage.includes('テスト')) {\n    return `テスト作成のサポートをします。\\n\\nテストの種類：\\n• ユニットテスト（関数・コンポーネント単位）\\n• 統合テスト（機能単位）\\n• E2Eテスト（シナリオベース）\\n\\nどのようなテストを作成したいか詳細を教えてください。`;\n  }\n\n  if (lowerMessage.includes('deploy') || lowerMessage.includes('デプロイ')) {\n    return `デプロイメントについてサポートします。\\n\\n利用可能な環境：\\n• Development (dev)\\n• Staging (stg)\\n• Production (prod)\\n\\n現在の設定やデプロイしたい環境を教えてください。`;\n  }\n\n  // プロジェクト関連\n  if (lowerMessage.includes('project') || lowerMessage.includes('プロジェクト')) {\n    return `プロジェクトに関するご質問ですね。\\n\\nMARIA PLATFORMの主要機能：\\n• Paper Editor - LaTeX論文編集\\n• Slides Editor - プレゼンテーション作成\\n• AI Chat - 対話型開発支援\\n• Graph RAG - Knowledge Graph (optional)\\n\\n何か特定の機能について詳しく知りたいことはありますか？`;\n  }\n\n  // 一般的な応答\n  const responses = [\n    `なるほど、「${message}」についてですね。もう少し詳細を教えていただけますか？具体的にどのような作業をお手伝いできるでしょうか？`,\n    `ご依頼の内容を理解しました。以下の観点から検討してみましょう：\\n\\n• 技術的要件\\n• 実装方法\\n• 必要なリソース\\n\\n追加の情報があれば教えてください。`,\n    `「${message}」に関して、MARIA CODEでサポートできる方法を考えています。\\n\\n関連するツールや機能：\\n• コード生成\\n• ファイル操作\\n• テスト作成\\n• デプロイメント\\n\\nどちらの方向で進めたいでしょうか？`,\n  ];\n\n  const randomIndex = Math.floor(Math.random() * responses.length);\n  return responses[randomIndex] ?? '申し訳ありません。現在処理できません。';\n}\n\nfunction showHelp() {\n  console.log(chalk.cyan.bold('\\n📚 Available Commands:'));\n  console.log(chalk.yellow('  help     ') + '- Show this help message');\n  console.log(chalk.yellow('  history  ') + '- Show conversation history');\n  console.log(chalk.yellow('  clear    ') + '- Clear chat history');\n  console.log(chalk.yellow('  exit     ') + '- End chat session');\n  console.log(chalk.gray('\\n💡 Tips:'));\n  console.log(chalk.gray('  - Use natural language to describe what you want'));\n  console.log(chalk.gray('  - Be specific about files, functions, or features'));\n  console.log(chalk.gray('  - Ask for explanations, code creation, or fixes'));\n  console.log('');\n}\n\nfunction showHistory(session: ChatSession) {\n  console.log(chalk.cyan.bold('\\n📝 Conversation History:'));\n  if (session.messages.length === 0) {\n    console.log(chalk.gray('No messages yet.'));\n  } else {\n    session.messages.forEach((msg) => {\n      const time = msg.timestamp.toLocaleTimeString();\n      const role = msg.role === 'user' ? chalk.blue('You') : chalk.green('🤖 MARIA');\n      console.log(chalk.gray(`[${time}]`), role + ':', msg.content.substring(0, 100) + (msg.content.length > 100 ? '...' : ''));\n    });\n  }\n  console.log('');\n}\n\nfunction showSessionStats(session: ChatSession) {\n  const duration = Date.now() - session.startTime.getTime();\n  const minutes = Math.floor(duration / 60000);\n  const seconds = Math.floor((duration % 60000) / 1000);\n  \n  console.log(chalk.cyan.bold('\\n📊 Session Summary:'));\n  console.log(chalk.gray(`Session ID: ${session.sessionId}`));\n  console.log(chalk.gray(`Duration: ${minutes}m ${seconds}s`));\n  console.log(chalk.gray(`Messages: ${session.messages.length}`));\n  console.log(chalk.gray(`Started: ${session.startTime.toLocaleString()}`));\n  console.log('');\n}\n\nfunction generateSessionId(): string {\n  return 'session_' + Date.now().toString(36) + Math.random().toString(36).substr(2);\n}"],"mappings":"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","names":[]}