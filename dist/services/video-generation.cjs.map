{"version":3,"sources":["../../src/services/video-generation.ts","../../src/services/model-manager.ts"],"sourcesContent":["import { modelManager, GenerationOptions } from './model-manager';\nimport { promises as fs } from 'fs';\nimport { join, resolve, extname, dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport { spawn } from 'child_process';\n\nexport interface VideoOptions extends GenerationOptions {\n  model: 'wan22-5b' | 'wan22-14b';\n  fps?: number;\n  frames?: number;\n  resolution?: '720p' | '1080p' | '1280x720' | '1920x1080';\n  compare?: boolean;\n}\n\nexport interface VideoResult {\n  success: boolean;\n  outputPath?: string;\n  comparisonPath?: string;\n  error?: string;\n  metadata?: {\n    duration: number;\n    fps: number;\n    resolution: string;\n    modelUsed: string;\n    generationTime: number;\n  };\n}\n\nexport interface GenerationProgress {\n  stage: 'initializing' | 'processing' | 'finalizing' | 'complete' | 'error';\n  percentage: number;\n  estimatedTimeRemaining: string;\n  currentStep: string;\n  totalSteps: number;\n  error?: string;\n}\n\nexport class VideoGenerationService {\n  private outputDir: string;\n  private tempDir: string;\n  \n  constructor() {\n    const __filename = fileURLToPath(import.meta.url);\n    const __dirname = dirname(__filename);\n    const mariaRoot = resolve(__dirname, '../../../../..');\n    this.outputDir = join(mariaRoot, 'outputs/videos');\n    this.tempDir = join(mariaRoot, 'outputs/temp');\n  }\n\n  /**\n   * 動画生成（Text-to-Video）\n   */\n  async generateVideo(\n    prompt: string, \n    options: VideoOptions,\n    onProgress?: (progress: GenerationProgress) => void\n  ): Promise<VideoResult> {\n    try {\n      // 初期化\n      onProgress?.({\n        stage: 'initializing',\n        percentage: 0,\n        estimatedTimeRemaining: '計算中...',\n        currentStep: 'ComfyUI起動確認',\n        totalSteps: 4\n      });\n\n      // ComfyUI起動確認\n      const isComfyUIRunning = await modelManager.checkComfyUIStatus();\n      if (!isComfyUIRunning) {\n        onProgress?.({\n          stage: 'initializing',\n          percentage: 10,\n          estimatedTimeRemaining: '30秒',\n          currentStep: 'ComfyUI起動中',\n          totalSteps: 4\n        });\n        \n        const started = await modelManager.startComfyUI();\n        if (!started) {\n          throw new Error('ComfyUIの起動に失敗しました');\n        }\n      }\n\n      // モデル可用性確認\n      onProgress?.({\n        stage: 'initializing',\n        percentage: 25,\n        estimatedTimeRemaining: options.model === 'wan22-14b' ? '10-15分' : '3-7分',\n        currentStep: 'モデル読み込み確認',\n        totalSteps: 4\n      });\n\n      const modelInfo = await modelManager.getModelInfo(options.model);\n      if (!modelInfo || modelInfo.status !== 'available') {\n        throw new Error(`モデル ${options.model} が利用できません`);\n      }\n\n      // 出力ディレクトリ準備\n      await this.ensureDirectories();\n      \n      // 比較生成の場合は両モデルで生成\n      if (options.compare) {\n        return await this.generateComparison(prompt, options, onProgress);\n      }\n\n      // 単一モデルで生成\n      return await this.generateSingle(prompt, options, onProgress);\n\n    } catch (error) {\n      onProgress?.({\n        stage: 'error',\n        percentage: 0,\n        estimatedTimeRemaining: '',\n        currentStep: 'エラー発生',\n        totalSteps: 0,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error)\n      };\n    }\n  }\n\n  /**\n   * 単一モデルで動画生成\n   */\n  private async generateSingle(\n    prompt: string,\n    options: VideoOptions,\n    onProgress?: (progress: GenerationProgress) => void\n  ): Promise<VideoResult> {\n    const startTime = Date.now();\n    const outputFilename = this.generateOutputFilename(options.model);\n    const outputPath = join(this.outputDir, outputFilename);\n\n    try {\n      // ワークフロー選択\n      const modelMap: Record<string, string> = {\n        'wan22-5b': 'wan22_5b',\n        'wan22-14b': 'wan22_14b'\n      };\n      const normalizedModel = modelMap[options.model] || options.model;\n      const workflowId = options.inputImage \n        ? `${normalizedModel}_i2v`\n        : `${normalizedModel}_t2v`;\n\n      onProgress?.({\n        stage: 'processing',\n        percentage: 30,\n        estimatedTimeRemaining: this.estimateGenerationTime(options.model),\n        currentStep: 'ワークフロー準備',\n        totalSteps: 4\n      });\n\n      // ワークフロー読み込み\n      const workflowData = await modelManager.loadWorkflow(workflowId);\n      \n      // パラメータ設定\n      const generationParams: GenerationOptions = {\n        model: options.model,\n        prompt,\n        width: this.parseResolution(options.resolution).width,\n        height: this.parseResolution(options.resolution).height,\n        steps: options.steps || (options.model === 'wan22-14b' ? 50 : 30),\n        seed: options.seed,\n        inputImage: options.inputImage,\n        outputPath: outputFilename.replace('.mp4', '')\n      };\n\n      // ワークフロー実行\n      onProgress?.({\n        stage: 'processing',\n        percentage: 50,\n        estimatedTimeRemaining: this.estimateGenerationTime(options.model),\n        currentStep: `${options.model} モデルで生成中`,\n        totalSteps: 4\n      });\n\n      const processedWorkflow = modelManager.replaceWorkflowParameters(\n        workflowData.workflow,\n        generationParams\n      );\n\n      const promptId = await modelManager.executeWorkflow(processedWorkflow);\n\n      // 生成完了待機\n      await this.waitForCompletion(promptId, onProgress);\n\n      // 後処理\n      onProgress?.({\n        stage: 'finalizing',\n        percentage: 90,\n        estimatedTimeRemaining: '30秒',\n        currentStep: '出力ファイル処理',\n        totalSteps: 4\n      });\n\n      // ComfyUI出力からファイル移動\n      await this.moveOutputFiles(outputPath);\n\n      // メタデータ生成\n      const metadata = await this.generateMetadata(\n        outputPath,\n        options.model,\n        Date.now() - startTime\n      );\n\n      // 最終使用日時更新\n      await modelManager.updateLastUsed(options.model);\n\n      onProgress?.({\n        stage: 'complete',\n        percentage: 100,\n        estimatedTimeRemaining: '完了',\n        currentStep: '動画生成完了',\n        totalSteps: 4\n      });\n\n      return {\n        success: true,\n        outputPath,\n        metadata\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error)\n      };\n    }\n  }\n\n  /**\n   * 比較動画生成（5B vs 14B）\n   */\n  private async generateComparison(\n    prompt: string,\n    options: VideoOptions,\n    onProgress?: (progress: GenerationProgress) => void\n  ): Promise<VideoResult> {\n    try {\n      onProgress?.({\n        stage: 'processing',\n        percentage: 10,\n        estimatedTimeRemaining: '15-20分',\n        currentStep: '5Bモデルで生成中',\n        totalSteps: 6\n      });\n\n      // 5Bモデルで生成\n      const options5B: VideoOptions = { ...options, model: 'wan22-5b', compare: false };\n      const result5B = await this.generateSingle(prompt, options5B);\n\n      if (!result5B.success) {\n        throw new Error(`5Bモデル生成エラー: ${result5B.error}`);\n      }\n\n      onProgress?.({\n        stage: 'processing',\n        percentage: 40,\n        estimatedTimeRemaining: '10-15分',\n        currentStep: '14Bモデルで生成中',\n        totalSteps: 6\n      });\n\n      // 14Bモデルで生成\n      const options14B: VideoOptions = { ...options, model: 'wan22-14b', compare: false };\n      const result14B = await this.generateSingle(prompt, options14B);\n\n      if (!result14B.success) {\n        throw new Error(`14Bモデル生成エラー: ${result14B.error}`);\n      }\n\n      onProgress?.({\n        stage: 'finalizing',\n        percentage: 80,\n        estimatedTimeRemaining: '2-3分',\n        currentStep: '比較動画作成中',\n        totalSteps: 6\n      });\n\n      // 横並び比較動画作成\n      const comparisonPath = await this.createComparisonVideo(\n        result5B.outputPath!,\n        result14B.outputPath!\n      );\n\n      onProgress?.({\n        stage: 'complete',\n        percentage: 100,\n        estimatedTimeRemaining: '完了',\n        currentStep: '比較動画生成完了',\n        totalSteps: 6\n      });\n\n      return {\n        success: true,\n        outputPath: result14B.outputPath, // メイン出力は14B\n        comparisonPath,\n        metadata: result14B.metadata\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : String(error)\n      };\n    }\n  }\n\n  /**\n   * 生成完了待機\n   */\n  private async waitForCompletion(\n    promptId: string,\n    onProgress?: (progress: GenerationProgress) => void\n  ): Promise<void> {\n    const maxWaitTime = 20 * 60 * 1000; // 20分タイムアウト\n    const checkInterval = 5000; // 5秒間隔\n    const startTime = Date.now();\n\n    while (Date.now() - startTime < maxWaitTime) {\n      const status = await modelManager.checkProgress(promptId);\n      \n      if (status.completed) {\n        return;\n      }\n      \n      if (status.error) {\n        throw new Error(`生成エラー: ${status.error}`);\n      }\n\n      // 進捗更新\n      if (onProgress && status.progress !== undefined) {\n        const elapsedMinutes = (Date.now() - startTime) / 60000;\n        const progressPercent = Math.min(75, 50 + (status.progress * 25));\n        \n        onProgress({\n          stage: 'processing',\n          percentage: progressPercent,\n          estimatedTimeRemaining: `残り ${Math.max(1, Math.ceil(15 - elapsedMinutes))} 分`,\n          currentStep: '動画生成処理中',\n          totalSteps: 4\n        });\n      }\n\n      await new Promise(resolve => setTimeout(resolve, checkInterval));\n    }\n\n    throw new Error('動画生成がタイムアウトしました');\n  }\n\n  /**\n   * 比較動画作成（ffmpeg使用）\n   */\n  private async createComparisonVideo(leftVideo: string, rightVideo: string): Promise<string> {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const outputPath = join(this.outputDir, `comparison_${timestamp}.mp4`);\n\n    return new Promise((resolve, reject) => {\n      const ffmpeg = spawn('ffmpeg', [\n        '-y', // 上書き\n        '-i', leftVideo,  // 左側動画（5B）\n        '-i', rightVideo, // 右側動画（14B）\n        '-filter_complex', \n        '[0:v]scale=640:360[left];[1:v]scale=640:360[right];[left][right]hstack=inputs=2[v]',\n        '-map', '[v]',\n        '-c:v', 'libx264',\n        '-pix_fmt', 'yuv420p',\n        '-crf', '23',\n        outputPath\n      ]);\n\n      ffmpeg.on('close', (code) => {\n        if (code === 0) {\n          resolve(outputPath);\n        } else {\n          reject(new Error(`ffmpeg終了コード: ${code}`));\n        }\n      });\n\n      ffmpeg.on('error', (error) => {\n        reject(new Error(`ffmpeg実行エラー: ${error.message}`));\n      });\n    });\n  }\n\n  /**\n   * 出力ファイルの移動処理\n   */\n  private async moveOutputFiles(targetPath: string): Promise<void> {\n    // TODO: ComfyUIの出力ディレクトリから targetPath へファイル移動\n    // 現在はプレースホルダー実装\n    \n    // ComfyUIのデフォルト出力ディレクトリ確認 (将来使用予定)\n    const __filename = fileURLToPath(import.meta.url);\n    const __dirname = dirname(__filename);\n    const _comfyUIOutputDir = resolve(__dirname, '../../../../comfyui/output');\n    void _comfyUIOutputDir; // Will be used for actual ComfyUI integration\n    \n    try {\n      // 最新の出力ファイルを検索してコピー\n      // 実装が必要: ComfyUIの実際の出力パスに応じて調整\n      console.log(`出力ファイルを ${targetPath} に移動準備中...`);\n    } catch (error) {\n      console.warn('出力ファイル移動警告:', error);\n    }\n  }\n\n  /**\n   * メタデータ生成\n   */\n  private async generateMetadata(\n    _outputPath: string,\n    modelUsed: string,\n    generationTime: number\n  ): Promise<VideoResult['metadata']> {\n    // TODO: 実際の動画ファイルからメタデータを取得\n    return {\n      duration: 2.0, // 秒\n      fps: 24,\n      resolution: '1280x720',\n      modelUsed,\n      generationTime: Math.round(generationTime / 1000) // 秒単位\n    };\n  }\n\n  /**\n   * ユーティリティメソッド\n   */\n  private parseResolution(resolution?: string): { width: number; height: number } {\n    switch (resolution) {\n      case '720p':\n      case '1280x720':\n        return { width: 1280, height: 720 };\n      case '1080p':\n      case '1920x1080':\n        return { width: 1920, height: 1080 };\n      default:\n        return { width: 1280, height: 720 };\n    }\n  }\n\n  private estimateGenerationTime(model: string): string {\n    return model === 'wan22-14b' ? '5-15分' : '2-7分';\n  }\n\n  private generateOutputFilename(model: string): string {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    return `maria_video_${model}_${timestamp}.mp4`;\n  }\n\n  private async ensureDirectories(): Promise<void> {\n    await fs.mkdir(this.outputDir, { recursive: true });\n    await fs.mkdir(this.tempDir, { recursive: true });\n  }\n\n  /**\n   * Image-to-Video 専用メソッド\n   */\n  async generateFromImage(\n    imagePath: string,\n    prompt: string,\n    options: Omit<VideoOptions, 'inputImage'>\n  ): Promise<VideoResult> {\n    // 画像ファイル存在確認\n    try {\n      await fs.access(imagePath);\n    } catch {\n      return {\n        success: false,\n        error: `入力画像が見つかりません: ${imagePath}`\n      };\n    }\n\n    // 対応フォーマット確認\n    const ext = extname(imagePath).toLowerCase();\n    if (!['.jpg', '.jpeg', '.png', '.bmp'].includes(ext)) {\n      return {\n        success: false,\n        error: `対応していない画像フォーマット: ${ext}`\n      };\n    }\n\n    return await this.generateVideo(prompt, {\n      ...options,\n      inputImage: imagePath\n    });\n  }\n}\n\n// シングルトンインスタンス\nexport const videoGenerationService = new VideoGenerationService();","import { promises as fs } from 'fs';\nimport { join, resolve, dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport { spawn, ChildProcess } from 'child_process';\n\nexport interface ModelInfo {\n  id: string;\n  name: string;\n  type: 'video' | 'image';\n  size: string;\n  path: string;\n  status: 'available' | 'downloading' | 'error' | 'not_found';\n  capabilities: string[];\n  vramRequired: string;\n  estimatedTime: string;\n  lastUsed?: Date;\n}\n\nexport interface ModelConfig {\n  wan22_5b: ModelInfo;\n  wan22_14b: ModelInfo;\n  qwen_image: ModelInfo;\n}\n\nexport interface GenerationOptions {\n  model: string;\n  prompt: string;\n  width?: number;\n  height?: number;\n  steps?: number;\n  guidance?: number;\n  seed?: number;\n  inputImage?: string;\n  outputPath?: string;\n  style?: string;\n  fps?: number;\n  frames?: number;\n}\n\nexport class ModelManager {\n  private config: ModelConfig;\n  private modelsDir: string;\n  private workflowsDir: string;\n  private comfyuiDir: string;\n  private comfyuiProcess: ChildProcess | null = null;\n\n  constructor() {\n    const __filename = fileURLToPath(import.meta.url);\n    const __dirname = dirname(__filename);\n    const mariaRoot = resolve(__dirname, '../../../../..');\n    this.modelsDir = join(mariaRoot, 'models');\n    this.workflowsDir = join(mariaRoot, 'workflows');\n    this.comfyuiDir = join(mariaRoot, 'comfyui');\n    \n    this.config = {\n      wan22_5b: {\n        id: 'wan22-5b',\n        name: 'Wan 2.2 5B',\n        type: 'video',\n        size: '~8GB',\n        path: join(this.modelsDir, 'wan22/5b'),\n        status: 'not_found',\n        capabilities: ['text-to-video', 'image-to-video'],\n        vramRequired: '~8GB',\n        estimatedTime: '2-5分'\n      },\n      wan22_14b: {\n        id: 'wan22-14b',\n        name: 'Wan 2.2 14B',\n        type: 'video',\n        size: '~16GB', \n        path: join(this.modelsDir, 'wan22/14b'),\n        status: 'not_found',\n        capabilities: ['text-to-video', 'image-to-video', 'high-quality'],\n        vramRequired: '~16GB',\n        estimatedTime: '5-15分'\n      },\n      qwen_image: {\n        id: 'qwen-image',\n        name: 'Qwen-Image',\n        type: 'image',\n        size: '~6GB',\n        path: join(this.modelsDir, 'qwen-image'),\n        status: 'not_found', \n        capabilities: ['text-to-image', 'style-control'],\n        vramRequired: '~6GB',\n        estimatedTime: '30-60秒'\n      }\n    };\n  }\n\n  /**\n   * モデルステータス確認\n   */\n  async checkModelStatus(): Promise<ModelConfig> {\n    for (const [key, model] of Object.entries(this.config)) {\n      try {\n        const stats = await fs.stat(model.path);\n        if (stats.isDirectory()) {\n          const files = await fs.readdir(model.path);\n          if (files.length > 0) {\n            this.config[key as keyof ModelConfig].status = 'available';\n            \n            // 最終使用日時を取得\n            try {\n              const lastUsedFile = join(model.path, '.last_used');\n              const lastUsedStr = await fs.readFile(lastUsedFile, 'utf-8');\n              this.config[key as keyof ModelConfig].lastUsed = new Date(lastUsedStr);\n            } catch {\n              // ファイルが存在しない場合は無視\n            }\n          }\n        }\n      } catch {\n        this.config[key as keyof ModelConfig].status = 'not_found';\n      }\n    }\n    \n    return this.config;\n  }\n\n  /**\n   * 利用可能なモデル一覧取得\n   */\n  async getAvailableModels(): Promise<ModelInfo[]> {\n    await this.checkModelStatus();\n    return Object.values(this.config).filter(model => model.status === 'available');\n  }\n\n  /**\n   * 特定モデル情報取得\n   */\n  async getModelInfo(modelId: string): Promise<ModelInfo | null> {\n    await this.checkModelStatus();\n    const model = Object.values(this.config).find(m => m.id === modelId);\n    return model || null;\n  }\n\n  /**\n   * ComfyUI起動\n   */\n  async startComfyUI(): Promise<boolean> {\n    if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n      console.log('✅ ComfyUI は既に起動中です');\n      return true;\n    }\n\n    try {\n      console.log('🚀 ComfyUI 起動中...');\n      \n      const pythonPath = join(this.comfyuiDir, 'venv/bin/python');\n      const mainScript = join(this.comfyuiDir, 'main.py');\n      \n      this.comfyuiProcess = spawn(pythonPath, [\n        mainScript,\n        '--listen', '127.0.0.1',\n        '--port', '8188',\n        '--disable-auto-launch'\n      ], {\n        cwd: this.comfyuiDir,\n        stdio: ['pipe', 'pipe', 'pipe']\n      });\n\n      return new Promise((resolve) => {\n        let started = false;\n        \n        const timeout = setTimeout(() => {\n          if (!started) {\n            console.log('⚠️ ComfyUI起動タイムアウト');\n            resolve(false);\n          }\n        }, 30000); // 30秒タイムアウト\n\n        this.comfyuiProcess!.stdout?.on('data', (data) => {\n          const output = data.toString();\n          console.log('ComfyUI:', output);\n          \n          if (output.includes('Starting server')) {\n            started = true;\n            clearTimeout(timeout);\n            console.log('✅ ComfyUI 起動完了: http://localhost:8188');\n            resolve(true);\n          }\n        });\n\n        this.comfyuiProcess!.stderr?.on('data', (data) => {\n          console.error('ComfyUI Error:', data.toString());\n        });\n\n        this.comfyuiProcess!.on('error', (error) => {\n          console.error('❌ ComfyUI起動エラー:', error.message);\n          clearTimeout(timeout);\n          resolve(false);\n        });\n      });\n    } catch (error) {\n      console.error('❌ ComfyUI起動失敗:', error);\n      return false;\n    }\n  }\n\n  /**\n   * ComfyUI停止\n   */\n  async stopComfyUI(): Promise<void> {\n    if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n      console.log('🛑 ComfyUI 停止中...');\n      this.comfyuiProcess.kill('SIGTERM');\n      \n      // 強制終了のための待機\n      setTimeout(() => {\n        if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n          console.log('🔪 ComfyUI 強制停止');\n          this.comfyuiProcess.kill('SIGKILL');\n        }\n      }, 5000);\n      \n      this.comfyuiProcess = null;\n      console.log('✅ ComfyUI 停止完了');\n    }\n  }\n\n  /**\n   * ComfyUIステータス確認\n   */\n  async checkComfyUIStatus(): Promise<boolean> {\n    try {\n      const response = await fetch('http://localhost:8188/system_stats');\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * ワークフロー読み込み\n   */\n  async loadWorkflow(workflowId: string): Promise<any> {\n    const workflowConfigPath = join(this.workflowsDir, 'workflow_config.json');\n    \n    try {\n      const configContent = await fs.readFile(workflowConfigPath, 'utf-8');\n      const config = JSON.parse(configContent);\n      \n      const workflow = config.workflows[workflowId];\n      if (!workflow) {\n        throw new Error(`ワークフロー '${workflowId}' が見つかりません`);\n      }\n      \n      const workflowPath = join(this.workflowsDir, workflow.file);\n      const workflowContent = await fs.readFile(workflowPath, 'utf-8');\n      \n      return {\n        ...workflow,\n        workflow: JSON.parse(workflowContent)\n      };\n    } catch (error) {\n      throw new Error(`ワークフロー読み込みエラー: ${error}`);\n    }\n  }\n\n  /**\n   * ワークフローパラメータ置換\n   */\n  replaceWorkflowParameters(workflow: any, params: GenerationOptions): any {\n    const workflowStr = JSON.stringify(workflow);\n    \n    const replacements = {\n      'PROMPT_PLACEHOLDER': params.prompt,\n      'SEED_PLACEHOLDER': params.seed?.toString() || Math.floor(Math.random() * 1000000).toString(),\n      'STEPS_PLACEHOLDER': params.steps?.toString() || '30',\n      'WIDTH_PLACEHOLDER': params.width?.toString() || '1280',\n      'HEIGHT_PLACEHOLDER': params.height?.toString() || '720',\n      'OUTPUT_PREFIX_PLACEHOLDER': params.outputPath || 'maria_generated',\n      'INPUT_IMAGE_PLACEHOLDER': params.inputImage || '',\n      'STYLE_PLACEHOLDER': params.style || 'photorealistic',\n      'GUIDANCE_PLACEHOLDER': params.guidance?.toString() || '7.5'\n    };\n\n    let processedWorkflow = workflowStr;\n    for (const [placeholder, value] of Object.entries(replacements)) {\n      processedWorkflow = processedWorkflow.replace(\n        new RegExp(placeholder, 'g'),\n        value\n      );\n    }\n\n    return JSON.parse(processedWorkflow);\n  }\n\n  /**\n   * ComfyUI API経由でワークフロー実行\n   */\n  async executeWorkflow(workflow: any): Promise<string> {\n    if (!await this.checkComfyUIStatus()) {\n      throw new Error('ComfyUIが起動していません');\n    }\n\n    try {\n      const response = await fetch('http://localhost:8188/prompt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ prompt: workflow })\n      });\n\n      if (!response.ok) {\n        throw new Error(`ComfyUI API エラー: ${response.status}`);\n      }\n\n      const result = await response.json();\n      return result.prompt_id;\n    } catch (error) {\n      throw new Error(`ワークフロー実行エラー: ${error}`);\n    }\n  }\n\n  /**\n   * 生成進捗確認\n   */\n  async checkProgress(promptId: string): Promise<{ completed: boolean; progress?: number; error?: string }> {\n    try {\n      const response = await fetch(`http://localhost:8188/prompt/${promptId}`);\n      \n      if (!response.ok) {\n        return { completed: false, error: 'プロンプトIDが見つかりません' };\n      }\n\n      const result = await response.json();\n      \n      // ComfyUIの実際のレスポンス形式に合わせて調整が必要\n      if (result.status === 'completed') {\n        return { completed: true };\n      } else if (result.status === 'error') {\n        return { completed: false, error: result.message };\n      } else {\n        return { completed: false, progress: result.progress || 0 };\n      }\n    } catch (error) {\n      return { completed: false, error: `進捗確認エラー: ${error}` };\n    }\n  }\n\n  /**\n   * 最終使用日時更新\n   */\n  async updateLastUsed(modelId: string): Promise<void> {\n    const model = Object.values(this.config).find(m => m.id === modelId);\n    if (model && model.status === 'available') {\n      try {\n        const lastUsedFile = join(model.path, '.last_used');\n        await fs.writeFile(lastUsedFile, new Date().toISOString());\n        model.lastUsed = new Date();\n      } catch (error) {\n        console.warn(`最終使用日時更新エラー (${modelId}):`, error);\n      }\n    }\n  }\n\n  /**\n   * リソース使用状況確認\n   */\n  async getResourceUsage(): Promise<{ memory: number; gpu: number; disk: number }> {\n    // TODO: 実際のシステムリソース監視実装\n    return {\n      memory: 0, // MB\n      gpu: 0,    // %\n      disk: 0    // MB\n    };\n  }\n\n  /**\n   * クリーンアップ\n   */\n  async cleanup(): Promise<void> {\n    await this.stopComfyUI();\n  }\n}\n\n// シングルトンインスタンス\nexport const modelManager = new ModelManager();"],"mappings":"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","names":["fs","resolve","import_fs","import_path","import_url","import_child_process","import_meta","resolve","fs"]}