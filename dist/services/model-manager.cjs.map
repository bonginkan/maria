{"version":3,"sources":["../../src/services/model-manager.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport { join, resolve, dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport { spawn, ChildProcess } from 'child_process';\n\nexport interface ModelInfo {\n  id: string;\n  name: string;\n  type: 'video' | 'image';\n  size: string;\n  path: string;\n  status: 'available' | 'downloading' | 'error' | 'not_found';\n  capabilities: string[];\n  vramRequired: string;\n  estimatedTime: string;\n  lastUsed?: Date;\n}\n\nexport interface ModelConfig {\n  wan22_5b: ModelInfo;\n  wan22_14b: ModelInfo;\n  qwen_image: ModelInfo;\n}\n\nexport interface GenerationOptions {\n  model: string;\n  prompt: string;\n  width?: number;\n  height?: number;\n  steps?: number;\n  guidance?: number;\n  seed?: number;\n  inputImage?: string;\n  outputPath?: string;\n  style?: string;\n  fps?: number;\n  frames?: number;\n}\n\nexport class ModelManager {\n  private config: ModelConfig;\n  private modelsDir: string;\n  private workflowsDir: string;\n  private comfyuiDir: string;\n  private comfyuiProcess: ChildProcess | null = null;\n\n  constructor() {\n    const __filename = fileURLToPath(import.meta.url);\n    const __dirname = dirname(__filename);\n    const mariaRoot = resolve(__dirname, '../../../../..');\n    this.modelsDir = join(mariaRoot, 'models');\n    this.workflowsDir = join(mariaRoot, 'workflows');\n    this.comfyuiDir = join(mariaRoot, 'comfyui');\n    \n    this.config = {\n      wan22_5b: {\n        id: 'wan22-5b',\n        name: 'Wan 2.2 5B',\n        type: 'video',\n        size: '~8GB',\n        path: join(this.modelsDir, 'wan22/5b'),\n        status: 'not_found',\n        capabilities: ['text-to-video', 'image-to-video'],\n        vramRequired: '~8GB',\n        estimatedTime: '2-5分'\n      },\n      wan22_14b: {\n        id: 'wan22-14b',\n        name: 'Wan 2.2 14B',\n        type: 'video',\n        size: '~16GB', \n        path: join(this.modelsDir, 'wan22/14b'),\n        status: 'not_found',\n        capabilities: ['text-to-video', 'image-to-video', 'high-quality'],\n        vramRequired: '~16GB',\n        estimatedTime: '5-15分'\n      },\n      qwen_image: {\n        id: 'qwen-image',\n        name: 'Qwen-Image',\n        type: 'image',\n        size: '~6GB',\n        path: join(this.modelsDir, 'qwen-image'),\n        status: 'not_found', \n        capabilities: ['text-to-image', 'style-control'],\n        vramRequired: '~6GB',\n        estimatedTime: '30-60秒'\n      }\n    };\n  }\n\n  /**\n   * モデルステータス確認\n   */\n  async checkModelStatus(): Promise<ModelConfig> {\n    for (const [key, model] of Object.entries(this.config)) {\n      try {\n        const stats = await fs.stat(model.path);\n        if (stats.isDirectory()) {\n          const files = await fs.readdir(model.path);\n          if (files.length > 0) {\n            this.config[key as keyof ModelConfig].status = 'available';\n            \n            // 最終使用日時を取得\n            try {\n              const lastUsedFile = join(model.path, '.last_used');\n              const lastUsedStr = await fs.readFile(lastUsedFile, 'utf-8');\n              this.config[key as keyof ModelConfig].lastUsed = new Date(lastUsedStr);\n            } catch {\n              // ファイルが存在しない場合は無視\n            }\n          }\n        }\n      } catch {\n        this.config[key as keyof ModelConfig].status = 'not_found';\n      }\n    }\n    \n    return this.config;\n  }\n\n  /**\n   * 利用可能なモデル一覧取得\n   */\n  async getAvailableModels(): Promise<ModelInfo[]> {\n    await this.checkModelStatus();\n    return Object.values(this.config).filter(model => model.status === 'available');\n  }\n\n  /**\n   * 特定モデル情報取得\n   */\n  async getModelInfo(modelId: string): Promise<ModelInfo | null> {\n    await this.checkModelStatus();\n    const model = Object.values(this.config).find(m => m.id === modelId);\n    return model || null;\n  }\n\n  /**\n   * ComfyUI起動\n   */\n  async startComfyUI(): Promise<boolean> {\n    if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n      console.log('✅ ComfyUI は既に起動中です');\n      return true;\n    }\n\n    try {\n      console.log('🚀 ComfyUI 起動中...');\n      \n      const pythonPath = join(this.comfyuiDir, 'venv/bin/python');\n      const mainScript = join(this.comfyuiDir, 'main.py');\n      \n      this.comfyuiProcess = spawn(pythonPath, [\n        mainScript,\n        '--listen', '127.0.0.1',\n        '--port', '8188',\n        '--disable-auto-launch'\n      ], {\n        cwd: this.comfyuiDir,\n        stdio: ['pipe', 'pipe', 'pipe']\n      });\n\n      return new Promise((resolve) => {\n        let started = false;\n        \n        const timeout = setTimeout(() => {\n          if (!started) {\n            console.log('⚠️ ComfyUI起動タイムアウト');\n            resolve(false);\n          }\n        }, 30000); // 30秒タイムアウト\n\n        this.comfyuiProcess!.stdout?.on('data', (data) => {\n          const output = data.toString();\n          console.log('ComfyUI:', output);\n          \n          if (output.includes('Starting server')) {\n            started = true;\n            clearTimeout(timeout);\n            console.log('✅ ComfyUI 起動完了: http://localhost:8188');\n            resolve(true);\n          }\n        });\n\n        this.comfyuiProcess!.stderr?.on('data', (data) => {\n          console.error('ComfyUI Error:', data.toString());\n        });\n\n        this.comfyuiProcess!.on('error', (error) => {\n          console.error('❌ ComfyUI起動エラー:', error.message);\n          clearTimeout(timeout);\n          resolve(false);\n        });\n      });\n    } catch (error) {\n      console.error('❌ ComfyUI起動失敗:', error);\n      return false;\n    }\n  }\n\n  /**\n   * ComfyUI停止\n   */\n  async stopComfyUI(): Promise<void> {\n    if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n      console.log('🛑 ComfyUI 停止中...');\n      this.comfyuiProcess.kill('SIGTERM');\n      \n      // 強制終了のための待機\n      setTimeout(() => {\n        if (this.comfyuiProcess && !this.comfyuiProcess.killed) {\n          console.log('🔪 ComfyUI 強制停止');\n          this.comfyuiProcess.kill('SIGKILL');\n        }\n      }, 5000);\n      \n      this.comfyuiProcess = null;\n      console.log('✅ ComfyUI 停止完了');\n    }\n  }\n\n  /**\n   * ComfyUIステータス確認\n   */\n  async checkComfyUIStatus(): Promise<boolean> {\n    try {\n      const response = await fetch('http://localhost:8188/system_stats');\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * ワークフロー読み込み\n   */\n  async loadWorkflow(workflowId: string): Promise<any> {\n    const workflowConfigPath = join(this.workflowsDir, 'workflow_config.json');\n    \n    try {\n      const configContent = await fs.readFile(workflowConfigPath, 'utf-8');\n      const config = JSON.parse(configContent);\n      \n      const workflow = config.workflows[workflowId];\n      if (!workflow) {\n        throw new Error(`ワークフロー '${workflowId}' が見つかりません`);\n      }\n      \n      const workflowPath = join(this.workflowsDir, workflow.file);\n      const workflowContent = await fs.readFile(workflowPath, 'utf-8');\n      \n      return {\n        ...workflow,\n        workflow: JSON.parse(workflowContent)\n      };\n    } catch (error) {\n      throw new Error(`ワークフロー読み込みエラー: ${error}`);\n    }\n  }\n\n  /**\n   * ワークフローパラメータ置換\n   */\n  replaceWorkflowParameters(workflow: any, params: GenerationOptions): any {\n    const workflowStr = JSON.stringify(workflow);\n    \n    const replacements = {\n      'PROMPT_PLACEHOLDER': params.prompt,\n      'SEED_PLACEHOLDER': params.seed?.toString() || Math.floor(Math.random() * 1000000).toString(),\n      'STEPS_PLACEHOLDER': params.steps?.toString() || '30',\n      'WIDTH_PLACEHOLDER': params.width?.toString() || '1280',\n      'HEIGHT_PLACEHOLDER': params.height?.toString() || '720',\n      'OUTPUT_PREFIX_PLACEHOLDER': params.outputPath || 'maria_generated',\n      'INPUT_IMAGE_PLACEHOLDER': params.inputImage || '',\n      'STYLE_PLACEHOLDER': params.style || 'photorealistic',\n      'GUIDANCE_PLACEHOLDER': params.guidance?.toString() || '7.5'\n    };\n\n    let processedWorkflow = workflowStr;\n    for (const [placeholder, value] of Object.entries(replacements)) {\n      processedWorkflow = processedWorkflow.replace(\n        new RegExp(placeholder, 'g'),\n        value\n      );\n    }\n\n    return JSON.parse(processedWorkflow);\n  }\n\n  /**\n   * ComfyUI API経由でワークフロー実行\n   */\n  async executeWorkflow(workflow: any): Promise<string> {\n    if (!await this.checkComfyUIStatus()) {\n      throw new Error('ComfyUIが起動していません');\n    }\n\n    try {\n      const response = await fetch('http://localhost:8188/prompt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ prompt: workflow })\n      });\n\n      if (!response.ok) {\n        throw new Error(`ComfyUI API エラー: ${response.status}`);\n      }\n\n      const result = await response.json();\n      return result.prompt_id;\n    } catch (error) {\n      throw new Error(`ワークフロー実行エラー: ${error}`);\n    }\n  }\n\n  /**\n   * 生成進捗確認\n   */\n  async checkProgress(promptId: string): Promise<{ completed: boolean; progress?: number; error?: string }> {\n    try {\n      const response = await fetch(`http://localhost:8188/prompt/${promptId}`);\n      \n      if (!response.ok) {\n        return { completed: false, error: 'プロンプトIDが見つかりません' };\n      }\n\n      const result = await response.json();\n      \n      // ComfyUIの実際のレスポンス形式に合わせて調整が必要\n      if (result.status === 'completed') {\n        return { completed: true };\n      } else if (result.status === 'error') {\n        return { completed: false, error: result.message };\n      } else {\n        return { completed: false, progress: result.progress || 0 };\n      }\n    } catch (error) {\n      return { completed: false, error: `進捗確認エラー: ${error}` };\n    }\n  }\n\n  /**\n   * 最終使用日時更新\n   */\n  async updateLastUsed(modelId: string): Promise<void> {\n    const model = Object.values(this.config).find(m => m.id === modelId);\n    if (model && model.status === 'available') {\n      try {\n        const lastUsedFile = join(model.path, '.last_used');\n        await fs.writeFile(lastUsedFile, new Date().toISOString());\n        model.lastUsed = new Date();\n      } catch (error) {\n        console.warn(`最終使用日時更新エラー (${modelId}):`, error);\n      }\n    }\n  }\n\n  /**\n   * リソース使用状況確認\n   */\n  async getResourceUsage(): Promise<{ memory: number; gpu: number; disk: number }> {\n    // TODO: 実際のシステムリソース監視実装\n    return {\n      memory: 0, // MB\n      gpu: 0,    // %\n      disk: 0    // MB\n    };\n  }\n\n  /**\n   * クリーンアップ\n   */\n  async cleanup(): Promise<void> {\n    await this.stopComfyUI();\n  }\n}\n\n// シングルトンインスタンス\nexport const modelManager = new ModelManager();"],"mappings":"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","names":["fs","resolve"]}