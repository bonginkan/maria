{"version":3,"sources":["../src/commands/graph.ts","../src/index.tsx"],"sourcesContent":["import { Command } from 'commander';\nimport { existsSync, mkdirSync, chmodSync } from 'fs';\nimport { join } from 'path';\nimport { homedir } from 'os';\nimport { execa } from 'execa';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport { writeFileSync } from 'fs';\nimport { generateNeo4jJWT, getNeo4jBloomURL } from '@maria/shared';\nimport { loadConfig } from '../utils/config.js';\n\ninterface GraphOptions {\n  query?: string;\n  png?: string;\n}\n\nconst MARIA_DIR = join(homedir(), '.maria-code');\nconst JWT_FILE = join(MARIA_DIR, 'neo4j-jwt.token');\nconst JWT_EXPIRY_MINUTES = 15;\n\n// Ensure .maria-code directory exists\nfunction ensureMariaDir() {\n  if (!existsSync(MARIA_DIR)) {\n    mkdirSync(MARIA_DIR, { recursive: true });\n  }\n}\n\n// Generate JWT for Neo4j Bloom access\nasync function generateJWT(): Promise<string> {\n  const spinner = ora('Generating Neo4j Bloom JWT...').start();\n  \n  try {\n    // Load configuration\n    const config = loadConfig();\n    const userEmail = config.user?.email || process.env.MARIA_USER_EMAIL || 'user@example.com';\n    \n    // TODO: In production, retrieve the secret from Secret Manager\n    const secret = process.env.NEO4J_BLOOM_JWT_SECRET || 'temporary-dev-secret';\n    \n    const jwt = generateNeo4jJWT(userEmail, {\n      secret,\n      expiryMinutes: JWT_EXPIRY_MINUTES,\n      role: 'editor'\n    });\n    \n    spinner.succeed('JWT generated successfully');\n    return jwt;\n  } catch (error) {\n    spinner.fail('Failed to generate JWT');\n    throw error;\n  }\n}\n\n// Save JWT to local file with secure permissions\nfunction saveJWT(jwt: string) {\n  ensureMariaDir();\n  writeFileSync(JWT_FILE, jwt, { mode: 0o600 });\n  // Ensure file permissions are set correctly (readable by owner only)\n  chmodSync(JWT_FILE, 0o600);\n}\n\n// Get Neo4j Bloom URL with JWT\nfunction getBloomURL(jwt: string, query?: string): string {\n  const config = loadConfig();\n  const instanceId = config.neo4j?.instanceId || process.env.NEO4J_INSTANCE_ID || '4234c1a0';\n  return getNeo4jBloomURL(instanceId, jwt, query);\n}\n\n// Open URL in default browser\nasync function openInBrowser(url: string) {\n  const spinner = ora('Opening Graph Database in browser...').start();\n  \n  try {\n    const platform = process.platform;\n    const command = platform === 'darwin' ? 'open' : platform === 'win32' ? 'start' : 'xdg-open';\n    \n    await execa(command, [url]);\n    spinner.succeed('Graph Database interface opened in browser');\n  } catch {\n    spinner.fail('Failed to open browser');\n  }\n}\n\n// Export graph as PNG\nasync function exportGraphAsPNG(bloomURL: string, outputPath: string) {\n  const spinner = ora(`Exporting graph to ${outputPath}...`).start();\n  \n  try {\n    // In a real implementation, this would use Puppeteer or similar\n    // to capture a screenshot of the Bloom visualization\n    \n    // Create a placeholder file for now\n    const placeholderContent = `# Graph Export Placeholder\n    \nExport URL: ${bloomURL}\nGenerated at: ${new Date().toISOString()}\n\nTo manually export:\n1. Open the URL in your browser\n2. Use Neo4j Bloom's built-in export feature\n3. Save the visualization as PNG\n`;\n    \n    writeFileSync(outputPath, placeholderContent);\n    spinner.succeed(`Export instructions saved to ${outputPath}`);\n  } catch (error) {\n    spinner.fail('Failed to export graph as PNG');\n    throw error;\n  }\n}\n\n// Main graph command handler\nasync function graphHandler(options: GraphOptions) {\n  \n  try {\n    // Generate JWT\n    const jwt = await generateJWT();\n    saveJWT(jwt);\n    \n    // Build Bloom URL\n    const bloomURL = getBloomURL(jwt, options.query);\n    \n    \n    if (options.query) {\n    }\n    \n    // Handle PNG export if requested\n    if (options.png) {\n      await exportGraphAsPNG(bloomURL, options.png);\n    } else {\n      // Open in browser\n      await openInBrowser(bloomURL);\n    }\n    \n    console.log(chalk.bold('\\n✨ Graph viewer launched successfully!\\n'));\n    \n    if (!options.png) {\n      console.log(chalk.gray('Tips:'));\n      console.log(chalk.gray('  • Use Bloom\\'s search to explore nodes'));\n    }\n  } catch {\n    process.exit(1);\n  }\n}\n\n// Export command registration function\nexport default function registerGraphCommand(program: Command) {\n  program\n    .command('graph')\n    .description('Visualize Graph Database (requires Neo4j setup)')\n    .option('-q, --query <cypher>', 'Deep-link with Cypher query')\n    .option('-p, --png <output>', 'Export graph as PNG')\n    .action(graphHandler);\n}","import chalk from 'chalk';\nimport { MariaCLI } from './simple-interactive-cli.js';\n\nexport { default as graphCommand } from './commands/graph.js';\n\n// ASCII Logo for MARIA CODE\nfunction displayLogo() {\n  const logo = `\n${chalk.bold.magenta('╔══════════════════════════════════════════════════════════════╗')}\n${chalk.bold.magenta('║')}                                                              ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('███╗   ███╗ █████╗ ██████╗ ██╗ █████╗')}                    ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('████╗ ████║██╔══██╗██╔══██╗██║██╔══██╗')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('██╔████╔██║███████║██████╔╝██║███████║')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('██║╚██╔╝██║██╔══██║██╔══██╗██║██╔══██║')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('██║ ╚═╝ ██║██║  ██║██║  ██║██║██║  ██║')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}    ${chalk.bold.magenta('╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝  ╚═╝')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}                                                              ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('░█████╗░░█████╗░██████╗░███████╗')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('██╔══██╗██╔══██╗██╔══██╗██╔════╝')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('██║░░╚═╝██║░░██║██║░░██║█████╗░░')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('██║░░██╗██║░░██║██║░░██║██╔══╝░░')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('╚█████╔╝╚█████╔╝██████╔╝███████╗')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}           ${chalk.bold.magenta('░╚════╝░░╚════╝░╚═════╝░╚══════╝')}                   ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}                                                              ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}          ${chalk.bold.magenta('AI-Powered Development Platform')}                    ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}              ${chalk.magenta('v1.0.0 | TypeScript Monorepo')}                     ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}                                                              ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}             ${chalk.bold.cyan('© 2025 Bonginkan Inc.')}                           ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('║')}                                                              ${chalk.bold.magenta('║')}\n${chalk.bold.magenta('╚══════════════════════════════════════════════════════════════╝')}\n`;\n  \n  console.log(logo);\n  console.log(chalk.bold.magenta('🚀 MARIA CODE CLI Development Server Starting...\\n'));\n}\n\n// Main CLI entry point for development\nexport async function runCLI() {\n  // Use simple interactive CLI\n  new MariaCLI();\n}\n\n// Export the logo function for use in other commands\nexport { displayLogo };\n\n// Auto-run CLI when this file is executed directly (ESM only to avoid warnings)\n// CJS builds will use the package.json bin entry point instead"],"mappings":"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","names":[]}