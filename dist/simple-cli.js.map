{"version":3,"sources":["../src/simple-cli.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Command } from 'commander';\nimport prompts from 'prompts';\nimport chalk from 'chalk';\nimport ora from 'ora';\n\nconst program = new Command();\n\nprogram\n  .name('mc')\n  .description('MARIA CODE - AI-powered development CLI')\n  .version('1.0.0');\n\nprogram\n  .command('test')\n  .description('Test CLI functionality')\n  .action(() => {\n    console.log('[TEST] MARIA CODE CLI Test');\n    console.log('[OK] CLI is working correctly!');\n    console.log('Version: 1.0.0');\n    console.log('');\n    console.log('Available commands:');\n    console.log('  mc init        Initialize .maria-code.toml');\n    console.log('  mc chat        Interactive chat session');\n    console.log('  mc graph       Visualize Graph Database (requires Neo4j setup)');\n    console.log('  mc --help      Show help information');\n  });\n\nprogram\n  .command('init')\n  .description('Initialize .maria-code.toml')\n  .action(() => {\n    console.log('[INIT] Initializing MARIA CODE configuration...');\n    console.log('[OK] Configuration initialized successfully!');\n  });\n\nprogram\n  .command('chat')\n  .description('自然言語での対話型チャットセッション')\n  .option('-m, --mode <mode>', '動作モード (chat/research/creative)', 'chat')\n  .option('-v, --verbose', '詳細出力を表示', false)\n  .action(async (options) => {\n    // 直接natural-chatのコードを実行\n    await startNaturalChat(options);\n  });\n\nprogram\n  .command('version')\n  .description('Show version information')\n  .action(() => {\n    console.log('MARIA CODE CLI v1.0.0');\n    console.log('Node.js:', process.version);\n    console.log('Platform:', process.platform);\n  });\n\nprogram.parse(process.argv);\n\n// Natural chat function\nasync function startNaturalChat(options: any) {\n  console.log(chalk.cyan.bold('[AI] MARIA CODE Chat Interface'));\n  console.log(chalk.gray(`Mode: ${options.mode} | Verbose: ${options.verbose}`));\n  console.log(chalk.yellow('Type your request in natural language. Type \"exit\" to quit.\\n'));\n\n\n  // チャットループ\n  while (true) {\n    try {\n      const response = await prompts({\n        type: 'text',\n        name: 'message',\n        message: chalk.blue('You:'),\n        validate: (value: string) => value.length > 0 ? true : 'Please enter a message'\n      });\n\n      if (!response.message) {\n        console.log(chalk.yellow('👋 Chat session ended.'));\n        break;\n      }\n\n      const userMessage = response.message.trim();\n      \n      // 終了コマンド\n      if (userMessage.toLowerCase() === 'exit' || userMessage.toLowerCase() === 'quit') {\n        console.log(chalk.yellow('👋 Chat session ended.'));\n        break;\n      }\n\n      // ヘルプコマンド\n      if (userMessage.toLowerCase() === 'help') {\n        showChatHelp();\n        continue;\n      }\n\n      // クリアコマンド\n      if (userMessage.toLowerCase() === 'clear') {\n        console.clear();\n        console.log(chalk.cyan.bold('[AI] MARIA CODE Chat Interface'));\n        console.log(chalk.gray('Chat history cleared.\\n'));\n        continue;\n      }\n\n      // AI応答をシミュレート\n      const aiResponse = await processMessage(userMessage);\n      console.log(chalk.green('[AI] MARIA:'), aiResponse);\n      console.log(''); // 空行\n\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('cancelled')) {\n        console.log(chalk.yellow('\\n👋 Chat session cancelled.'));\n        break;\n      }\n      console.error(chalk.red('Error:'), error);\n    }\n  }\n}\n\nasync function processMessage(message: string): Promise<string> {\n  const spinner = ora('🤔 MARIA is thinking...').start();\n  \n  try {\n    // シミュレーション待機\n    await new Promise(resolve => setTimeout(resolve, 800 + Math.random() * 1200));\n    spinner.stop();\n\n    const lowerMessage = message.toLowerCase();\n    \n    // パターンマッチングによる応答生成\n    if (lowerMessage.includes('create') || lowerMessage.includes('作成') || lowerMessage.includes('作って')) {\n      if (lowerMessage.includes('file') || lowerMessage.includes('ファイル')) {\n        return `ファイル作成のご依頼ですね。以下の手順で進めます：\\n\\n1. ファイル名と形式を確認\\n2. 必要な内容を整理\\n3. ファイル作成と保存\\n\\n具体的なファイル名と内容を教えてください。`;\n      }\n      if (lowerMessage.includes('function') || lowerMessage.includes('関数')) {\n        return `関数作成のリクエストを承りました。\\n\\n必要な情報：\\n• 関数名\\n• 引数の型と名前\\n• 戻り値の型\\n• 処理内容\\n\\nこれらの詳細を教えてください。TypeScript/JavaScriptで実装します。`;\n      }\n    }\n\n    if (lowerMessage.includes('fix') || lowerMessage.includes('修正') || lowerMessage.includes('直して')) {\n      return `問題の修正をお手伝いします。\\n\\n詳細情報をお聞かせください：\\n• どのような問題が発生していますか？\\n• エラーメッセージはありますか？\\n• 問題が起きているファイルやコードはありますか？\\n\\n情報をいただければ、適切な解決策を提案します。`;\n    }\n\n    if (lowerMessage.includes('explain') || lowerMessage.includes('説明') || lowerMessage.includes('教えて')) {\n      return `説明のご依頼ですね。以下のような内容について詳しく説明できます：\\n\\n• コードの動作原理\\n• ライブラリやフレームワークの使い方\\n• ベストプラクティス\\n• アーキテクチャの設計\\n\\n具体的に何について知りたいか教えてください。`;\n    }\n\n    // プロジェクト関連\n    if (lowerMessage.includes('project') || lowerMessage.includes('プロジェクト')) {\n      return `プロジェクトに関するご質問ですね。\\n\\nMARIA PLATFORMの主要機能：\\n• Paper Editor - LaTeX論文編集\\n• Slides Editor - プレゼンテーション作成\\n• AI Chat - 対話型開発支援\\n• Graph RAG - Knowledge Graph (optional)\\n\\n何か特定の機能について詳しく知りたいことはありますか？`;\n    }\n\n    // デフォルト応答\n    const responses = [\n      `なるほど、「${message}」についてですね。もう少し詳細を教えていただけますか？`,\n      `ご依頼の内容を理解しました。具体的にどのような作業をお手伝いできるでしょうか？`,\n      `「${message}」に関して、MARIA CODEでサポートできる方法を考えています。追加の情報があれば教えてください。`,\n    ];\n\n    const randomIndex = Math.floor(Math.random() * responses.length);\n    return responses[randomIndex] ?? '申し訳ありません。現在処理できません。';\n    \n  } catch (error) {\n    spinner.stop();\n    return `申し訳ありません。エラーが発生しました: ${error instanceof Error ? error.message : 'Unknown error'}`;\n  }\n}\n\nfunction showChatHelp() {\n  console.log(chalk.cyan.bold('\\n📚 Available Commands:'));\n  console.log(chalk.yellow('  help     ') + '- Show this help message');\n  console.log(chalk.yellow('  clear    ') + '- Clear chat history');\n  console.log(chalk.yellow('  exit     ') + '- End chat session');\n  console.log(chalk.gray('\\n[TIP] Tips:'));\n  console.log(chalk.gray('  - Use natural language to describe what you want'));\n  console.log(chalk.gray('  - Be specific about files, functions, or features'));\n  console.log(chalk.gray('  - Ask for explanations, code creation, or fixes'));\n  console.log('');\n}\n\nif (!process.argv.slice(2).length) {\n  program.outputHelp();\n}"],"mappings":"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","names":[]}