#!/usr/bin/env node

/**
 * MARIA CODE - Smart Entry Point
 * Launches either command mode or beautiful interactive CLI
 * Bonginkan Inc.
 */

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

// Get the script directory and project root
const binDir = __dirname;
const projectRoot = path.dirname(binDir);
const mariaFile = path.join(projectRoot, 'dist', 'bin', 'maria.js');
const cliFile = path.join(projectRoot, 'dist', 'cli.js');
const interactiveFile = path.join(projectRoot, 'maria-interactive-cli.mjs');

// Check if running with arguments or in interactive mode
const hasArgs = process.argv.length > 2;

if (hasArgs) {
  // If arguments provided, use the built CLI for commands
  console.log('🚀 MARIA CODE CLI - Command Mode');
  
  // Check if built maria file exists
  if (!fs.existsSync(mariaFile)) {
    console.error('❌ Built file not found:', mariaFile);
    console.error('💡 Please run: pnpm build');
    process.exit(1);
  }
  
  // Launch the maria entry point with version check
  const child = spawn('node', ['--no-deprecation', mariaFile, ...process.argv.slice(2)], {
    stdio: 'inherit',
    cwd: process.cwd(),
    env: { ...process.env, NODE_NO_WARNINGS: '1' }
  });
  
  child.on('error', (err) => {
    console.error('❌ Error:', err.message);
    process.exit(1);
  });
  
  child.on('exit', (code) => {
    process.exit(code || 0);
  });
  
} else {
  // If no arguments, launch the beautiful interactive mode
  
  // Check if interactive file exists
  if (!fs.existsSync(interactiveFile)) {
    console.error('❌ Interactive CLI not found:', interactiveFile);
    console.error('💡 Falling back to command mode...');
    
    // Fallback to regular CLI
    const child = spawn('node', ['--no-deprecation', cliFile], {
      stdio: 'inherit',
      cwd: process.cwd(),
      env: { ...process.env, NODE_NO_WARNINGS: '1' }
    });
    
    child.on('exit', (code) => {
      process.exit(code || 0);
    });
  } else {
    // Launch the beautiful interactive CLI with ASCII art
    const child = spawn('node', [interactiveFile], {
      stdio: 'inherit',
      cwd: process.cwd(),
      env: process.env
    });
    
    child.on('error', (err) => {
      console.error('❌ Error:', err.message);
      process.exit(1);
    });
    
    child.on('exit', (code) => {
      process.exit(code || 0);
    });
  }
}